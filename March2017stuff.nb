(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    220093,       4534]
NotebookOptionsPosition[    215606,       4389]
NotebookOutlinePosition[    216774,       4427]
CellTagsIndexPosition[    216505,       4418]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"mysad", "=", 
  RowBox[{
  "Import", "[", 
   "\"\</Users/Anirudh/Desktop/HoustonHackathon/march2017barenecessities.csv\>\
\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7043208711940613`*^9, 3.704320876312591*^9}, {
  3.704320907105177*^9, 3.704320929101947*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"\[IDoubleDot]\[RightGuillemet]\[DownQuestion]\
Latitude\"\>", ",", "\<\"Longitude\"\>", ",", "\<\"Hour\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.813142`", ",", 
             RowBox[{"-", "95.309789`"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.483751`", ",", 
             RowBox[{"-", "94.924777`"}], ",", "15"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.791029`", ",", 
             RowBox[{"-", "95.450656`"}], ",", "18"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.791029`", ",", 
             RowBox[{"-", "95.450656`"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.791029`", ",", 
             RowBox[{"-", "95.450656`"}], ",", "18"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.800958`", ",", 
             RowBox[{"-", "95.405491`"}], ",", "19"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.800841`", ",", 
             RowBox[{"-", "95.415812`"}], ",", "7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.677357`", ",", 
             RowBox[{"-", "95.353895`"}], ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.677357`", ",", 
             RowBox[{"-", "95.353895`"}], ",", "21"}], "}"}], ",", 
           TemplateBox[{"9913"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{"29.742197`", ",", 
             RowBox[{"-", "95.470583`"}], ",", "16"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.742197`", ",", 
             RowBox[{"-", "95.470583`"}], ",", "17"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.693625`", ",", 
             RowBox[{"-", "95.364404`"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.732635`", ",", 
             RowBox[{"-", "95.396305`"}], ",", "18"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.743508`", ",", 
             RowBox[{"-", "95.395794`"}], ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.558859`", ",", 
             RowBox[{"-", "95.14541`"}], ",", "10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.68351`", ",", 
             RowBox[{"-", "95.583291`"}], ",", "19"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.621642`", ",", 
             RowBox[{"-", "95.501045`"}], ",", "17"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.625397`", ",", 
             RowBox[{"-", "95.501091`"}], ",", "8"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.614463`", ",", 
             RowBox[{"-", "95.424911`"}], ",", "17"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 4, 23842709925883969291, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 4, 23842709925883969291, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 4, 23842709925883969291, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[4]]], "Output",
 CellChangeTimes->{3.7043209297994747`*^9, 3.704321301106202*^9, 
  3.704370582179688*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sndfile", "=", 
  RowBox[{
  "Import", "[", "\"\</Users/Anirudh/Desktop/HoustonHackathon/mar17.xls\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.704328456012377*^9, 3.704328495251843*^9}, {
  3.704328538359309*^9, 3.7043285499124537`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "LinkOpen","linke",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Unknown MathLink problem \
encountered.\\\\\\\"\\\"}]\\).\"",2,20,17,23842709925883969291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.704370583147355*^9, 3.7043706628583*^9}],

Cell[BoxData[
 TemplateBox[{
  "InstallJava","launch","\"The Java runtime could not be launched.\"",2,20,
   18,23842709925883969291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.704370583147355*^9, 3.70437066291711*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sndfile2", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"sndfile", ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.704328730115848*^9, 3.70432873364825*^9}, {
   3.704328787305277*^9, 3.7043288111949883`*^9}, {3.7043288826945877`*^9, 
   3.704328886189961*^9}, 3.704328924588997*^9}],

Cell[BoxData[
 TemplateBox[{
  "Flatten","normal",
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Flatten\\\", \
\\\"[\\\", RowBox[{\\\"Null\\\", \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]\\).\"",2,
   6,3,23842709925883969291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7043705835914183`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "sndfile2", "]"}]], "Input",
 CellChangeTimes->{{3.7043288129811277`*^9, 3.704328851868*^9}, {
  3.704328894197489*^9, 3.7043289270736637`*^9}}],

Cell[BoxData[
 RowBox[{"{", "2", "}"}]], "Output",
 CellChangeTimes->{{3.704328828450251*^9, 3.704328852485379*^9}, {
   3.704328907740773*^9, 3.704328927502533*^9}, 3.704370583678671*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tally", "[", 
  RowBox[{"sndfile2", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "2", ",", 
         RowBox[{"Length", "[", "sndfile2", "]"}]}], "}"}]}], "]"}], ",", 
     "3"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7043290029687223`*^9, 3.7043290703280363`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"Flatten\\\", \\\"[\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{RowBox[{\\\"{\\\", \\\"2\\\", \\\"}\\\"}], \
\\\",\\\", \\\"3\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\) is longer than \
depth of object.\"",2,8,4,23842709925883969291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7043705837702303`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Tally","list",
   "\"List expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Tally\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Flatten\\\", \
\\\"[\\\", RowBox[{\\\"Null\\\", \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{RowBox[{\\\"{\\\", \\\"2\\\", \\\"}\\\"}], \
\\\",\\\", \\\"3\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}]\\).\"",2,
   8,5,23842709925883969291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.704370583802561*^9}],

Cell[BoxData[
 RowBox[{"Tally", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"Null", ",", "1"}], "]"}], "\[LeftDoubleBracket]", 
   RowBox[{
    RowBox[{"{", "2", "}"}], ",", "3"}], "\[RightDoubleBracket]"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.704329008068533*^9, 3.70432904061983*^9, 
  3.704329071194975*^9, 3.704370583822156*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sndfile2", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "3"}], "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.704328605945019*^9, 3.7043287008110943`*^9}, {
   3.704328944452434*^9, 3.7043289501882877`*^9}, 3.704329079220765*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"Flatten\\\", \\\"[\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"3\\\"}], \\\"\
\[RightDoubleBracket]\\\"}]\\) is longer than depth of object.\"",2,9,6,
   23842709925883969291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.704370583940178*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ColorData"}]], "Input",
 CellChangeTimes->{{3.704329434517926*^9, 3.704329438044937*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"ColorData\\\", \\\"[\\\", StyleBox[\\\"\\\\\
\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"scheme\\\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\
\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\) gives a function that \
generates colors in the named color scheme when applied to parameter values. \
\\n\!\(\*RowBox[{\\\"ColorData\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"scheme\\\\\\\",\\\
\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"property\\\\\\\",\\\\\\\"\
TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\) \
gives the specified property of a color scheme.\\n\!\(\*RowBox[{\\\"ColorData\
\\\", \\\"[\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"collection\\\\\\\",\\\\\\\
\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\) \
gives a list of color schemes in a named \
collection.\\n\!\(\*RowBox[{\\\"ColorData\\\", \\\"[\\\", \\\"]\\\"}]\) gives \
a list of named collections of color schemes.\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ColorData"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.704370584386519*^9},
 CellTags->"Info103704352584-2205563"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", 
    RowBox[{
     RowBox[{"Length", "[", "mysad", "]"}], "-", "1", "+", "1"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"sndfile2", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"i", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "2", ",", 
              RowBox[{"Length", "[", "sndfile2", "]"}]}], "}"}]}], "]"}], ",",
           "3"}], "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "\"\<Burglary\>\""}], ",", 
     
     RowBox[{
      RowBox[{"mysad", "[", 
       RowBox[{"[", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"mysad", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "Blue"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"sndfile2", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"i", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "2", ",", 
                RowBox[{"Length", "[", "sndfile2", "]"}]}], "}"}]}], "]"}], 
            ",", "3"}], "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "\"\<Auto Theft\>\""}], 
       ",", 
       RowBox[{
        RowBox[{"mysad", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"mysad", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "Red"}], "]"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"sndfile2", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"i", ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "2", ",", 
                  RowBox[{"Length", "[", "sndfile2", "]"}]}], "}"}]}], "]"}], 
              ",", "3"}], "]"}], "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "\"\<Theft\>\""}], ",", 
         RowBox[{
          RowBox[{"mysad", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"mysad", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "Black"}], "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"sndfile2", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{"i", ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "2", ",", 
                    RowBox[{"Length", "[", "sndfile2", "]"}]}], "}"}]}], 
                 "]"}], ",", "3"}], "]"}], "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "\"\<Rape\>\""}], 
           ",", 
           RowBox[{
            RowBox[{"mysad", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{"mysad", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "Green"}], 
             "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"sndfile2", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{"i", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "2", ",", 
                    RowBox[{"Length", "[", "sndfile2", "]"}]}], "}"}]}], 
                   "]"}], ",", "3"}], "]"}], "]"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", 
              "\"\<Robbery\>\""}], ",", 
             RowBox[{
              RowBox[{"mysad", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
              RowBox[{"Append", "[", 
               RowBox[{
                RowBox[{"mysad", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "Magenta"}], 
               "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"sndfile2", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"i", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "2", ",", 
                    RowBox[{"Length", "[", "sndfile2", "]"}]}], "}"}]}], 
                    "]"}], ",", "3"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", 
                "\"\<Aggravated Assault\>\""}], ",", 
               RowBox[{
                RowBox[{"mysad", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
                RowBox[{"Append", "[", 
                 RowBox[{
                  RowBox[{"mysad", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "Yellow"}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"sndfile2", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"i", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "2", ",", 
                    RowBox[{"Length", "[", "sndfile2", "]"}]}], "}"}]}], 
                    "]"}], ",", "3"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", 
                  "\"\<Murder\>\""}], ",", 
                 RowBox[{
                  RowBox[{"mysad", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
                  RowBox[{"Append", "[", 
                   RowBox[{
                    RowBox[{"mysad", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "Cyan"}], 
                   "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
              "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.704329092028833*^9, 3.7043291770914783`*^9}, {
  3.704329209049245*^9, 3.704329432334216*^9}, {3.7043294822690268`*^9, 
  3.7043295628924007`*^9}, {3.704329627135211*^9, 3.7043296350317707`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"Flatten\\\", \\\"[\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{RowBox[{\\\"{\\\", \\\"2\\\", \\\"}\\\"}], \
\\\",\\\", \\\"3\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\) is longer than \
depth of object.\"",2,11,7,23842709925883969291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.704370584574864*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"Flatten\\\", \\\"[\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{RowBox[{\\\"{\\\", \\\"2\\\", \\\"}\\\"}], \
\\\",\\\", \\\"3\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\) is longer than \
depth of object.\"",2,11,8,23842709925883969291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.704370584604616*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"Flatten\\\", \\\"[\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{RowBox[{\\\"{\\\", \\\"2\\\", \\\"}\\\"}], \
\\\",\\\", \\\"3\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\) is longer than \
depth of object.\"",2,11,9,23842709925883969291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.704370584627693*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,11,10,23842709925883969291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.704370584657106*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"4\\\"}]\\) of \
\\!\\(\\*RowBox[{RowBox[{\\\"Flatten\\\", \\\"[\\\", RowBox[{\\\"Null\\\", \\\
\",\\\", \\\"1\\\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"2\\\", \\\"}\\\"}], \\\",\\\", \\\"3\\\"}], \\\
\"\[RightDoubleBracket]\\\"}]\\) does not exist.\"",2,11,11,
   23842709925883969291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7043705846801853`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"5\\\"}]\\) of \
\\!\\(\\*RowBox[{RowBox[{\\\"Flatten\\\", \\\"[\\\", RowBox[{\\\"Null\\\", \\\
\",\\\", \\\"1\\\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"2\\\", \\\"}\\\"}], \\\",\\\", \\\"3\\\"}], \\\
\"\[RightDoubleBracket]\\\"}]\\) does not exist.\"",2,11,12,
   23842709925883969291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.704370584699786*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"6\\\"}]\\) of \
\\!\\(\\*RowBox[{RowBox[{\\\"Flatten\\\", \\\"[\\\", RowBox[{\\\"Null\\\", \\\
\",\\\", \\\"1\\\"}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"2\\\", \\\"}\\\"}], \\\",\\\", \\\"3\\\"}], \\\
\"\[RightDoubleBracket]\\\"}]\\) does not exist.\"",2,11,13,
   23842709925883969291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.704370584718471*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,11,14,23842709925883969291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7043705847380667`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.704329102623849*^9, 3.704329103272245*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "=", 
  RowBox[{"mysad", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "2", ",", "9933"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.704320937890749*^9, 3.704320976441222*^9}, {
  3.704321014765335*^9, 3.704321017758666*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"29.813142`", ",", 
             RowBox[{"-", "95.309789`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.483751`", ",", 
             RowBox[{"-", "94.924777`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.791029`", ",", 
             RowBox[{"-", "95.450656`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.791029`", ",", 
             RowBox[{"-", "95.450656`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.791029`", ",", 
             RowBox[{"-", "95.450656`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.800958`", ",", 
             RowBox[{"-", "95.405491`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.800841`", ",", 
             RowBox[{"-", "95.415812`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.677357`", ",", 
             RowBox[{"-", "95.353895`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.677357`", ",", 
             RowBox[{"-", "95.353895`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.677357`", ",", 
             RowBox[{"-", "95.353895`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.677357`", ",", 
             RowBox[{"-", "95.353895`"}]}], "}"}], ",", 
           TemplateBox[{"9910"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{"29.742197`", ",", 
             RowBox[{"-", "95.470583`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.742197`", ",", 
             RowBox[{"-", "95.470583`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.742197`", ",", 
             RowBox[{"-", "95.470583`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.693625`", ",", 
             RowBox[{"-", "95.364404`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.732635`", ",", 
             RowBox[{"-", "95.396305`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.743508`", ",", 
             RowBox[{"-", "95.395794`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.558859`", ",", 
             RowBox[{"-", "95.14541`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.68351`", ",", 
             RowBox[{"-", "95.583291`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.621642`", ",", 
             RowBox[{"-", "95.501045`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.625397`", ",", 
             RowBox[{"-", "95.501091`"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.614463`", ",", 
             RowBox[{"-", "95.424911`"}]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 13, 23842709925883969291, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 13, 23842709925883969291, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 13, 23842709925883969291, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[13]]], "Output",
 CellChangeTimes->{{3.7043209619395037`*^9, 3.7043209770788116`*^9}, 
   3.704321018462085*^9, 3.7043213013209476`*^9, 3.7043705849987698`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["mysad"], "Input",
 CellChangeTimes->{{3.704327272520074*^9, 3.7043272873917007`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"\[IDoubleDot]\[RightGuillemet]\[DownQuestion]\
Latitude\"\>", ",", "\<\"Longitude\"\>", ",", "\<\"Hour\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.813142`", ",", 
             RowBox[{"-", "95.309789`"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.483751`", ",", 
             RowBox[{"-", "94.924777`"}], ",", "15"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.791029`", ",", 
             RowBox[{"-", "95.450656`"}], ",", "18"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.791029`", ",", 
             RowBox[{"-", "95.450656`"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.791029`", ",", 
             RowBox[{"-", "95.450656`"}], ",", "18"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.800958`", ",", 
             RowBox[{"-", "95.405491`"}], ",", "19"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.800841`", ",", 
             RowBox[{"-", "95.415812`"}], ",", "7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.677357`", ",", 
             RowBox[{"-", "95.353895`"}], ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.677357`", ",", 
             RowBox[{"-", "95.353895`"}], ",", "21"}], "}"}], ",", 
           TemplateBox[{"9913"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{"29.742197`", ",", 
             RowBox[{"-", "95.470583`"}], ",", "16"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.742197`", ",", 
             RowBox[{"-", "95.470583`"}], ",", "17"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.693625`", ",", 
             RowBox[{"-", "95.364404`"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.732635`", ",", 
             RowBox[{"-", "95.396305`"}], ",", "18"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.743508`", ",", 
             RowBox[{"-", "95.395794`"}], ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.558859`", ",", 
             RowBox[{"-", "95.14541`"}], ",", "10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.68351`", ",", 
             RowBox[{"-", "95.583291`"}], ",", "19"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.621642`", ",", 
             RowBox[{"-", "95.501045`"}], ",", "17"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.625397`", ",", 
             RowBox[{"-", "95.501091`"}], ",", "8"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.614463`", ",", 
             RowBox[{"-", "95.424911`"}], ",", "17"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 14, 23842709925883969291, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 14, 23842709925883969291, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 14, 23842709925883969291, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[14]]], "Output",
 CellChangeTimes->{3.704327288274839*^9, 3.704370585209388*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mysad", "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2", ",", "9933"}], "}"}]}], "]"}], ",", "4"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7043299675872183`*^9, 3.704329968255649*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"4\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"29.813142`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"95.309789`\\\"}], \\\",\\\", \\\"0\\\"}], \\\"}\\\"}]\\) does not \
exist.\"",2,15,15,23842709925883969291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7043705852965307`*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             
             RowBox[{"\<\"\[IDoubleDot]\[RightGuillemet]\[DownQuestion]\
Latitude\"\>", ",", "\<\"Longitude\"\>", ",", "\<\"Hour\"\>"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"29.813142`", ",", 
              RowBox[{"-", "95.309789`"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"29.483751`", ",", 
              RowBox[{"-", "94.924777`"}], ",", "15"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"29.791029`", ",", 
              RowBox[{"-", "95.450656`"}], ",", "18"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"29.791029`", ",", 
              RowBox[{"-", "95.450656`"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"29.791029`", ",", 
              RowBox[{"-", "95.450656`"}], ",", "18"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"29.800958`", ",", 
              RowBox[{"-", "95.405491`"}], ",", "19"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"29.800841`", ",", 
              RowBox[{"-", "95.415812`"}], ",", "7"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"29.677357`", ",", 
              RowBox[{"-", "95.353895`"}], ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"29.677357`", ",", 
              RowBox[{"-", "95.353895`"}], ",", "21"}], "}"}], ",", 
            TemplateBox[{"9913"},
             "OutputSizeLimit`Skeleton",
             DisplayFunction->(FrameBox[
               
               RowBox[{
                "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
               Background -> GrayLevel[0.75], 
               BaseStyle -> {
                "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                 ShowStringCharacters -> False}, BaselinePosition -> Baseline,
                ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
               FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
            RowBox[{"{", 
             RowBox[{"29.742197`", ",", 
              RowBox[{"-", "95.470583`"}], ",", "16"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"29.742197`", ",", 
              RowBox[{"-", "95.470583`"}], ",", "17"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"29.693625`", ",", 
              RowBox[{"-", "95.364404`"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"29.732635`", ",", 
              RowBox[{"-", "95.396305`"}], ",", "18"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"29.743508`", ",", 
              RowBox[{"-", "95.395794`"}], ",", "4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"29.558859`", ",", 
              RowBox[{"-", "95.14541`"}], ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"29.68351`", ",", 
              RowBox[{"-", "95.583291`"}], ",", "19"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"29.621642`", ",", 
              RowBox[{"-", "95.501045`"}], ",", "17"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"29.625397`", ",", 
              RowBox[{"-", "95.501091`"}], ",", "8"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"29.614463`", ",", 
              RowBox[{"-", "95.424911`"}], ",", "17"}], "}"}]}], "}"}], 
          "\[LeftDoubleBracket]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton",
           DisplayFunction->(FrameBox[
             RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
             Background -> GrayLevel[0.75], 
             BaseStyle -> {
              "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
               ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
             ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
             FrameStyle -> None, RoundingRadius -> 7]& )], 
          "\[RightDoubleBracket]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 15, 23842709925883969291, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 15, 23842709925883969291, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 15, 23842709925883969291, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[15]]], "Output",
 CellChangeTimes->{3.704329971920195*^9, 3.70437058549881*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "PlotRange"}]], "Input",
 CellChangeTimes->{{3.704327393852934*^9, 3.704327396680276*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"PlotRange is an option for graphics functions that specifies \
what range of coordinates to include in a plot. \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/PlotRange"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.704370585807169*^9},
 CellTags->"Info163704352585-2205563"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", "#", "}"}], "&"}], "/@", 
    RowBox[{"mysad", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "9933"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"29.4", ",", "30"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "96"}], ",", 
        RowBox[{"-", "94.9"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "23"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"mysad", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "9933"}], "}"}]}], "]"}], ",", "4"}], 
      "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704327469872967*^9, 3.704327500655937*^9}, {
  3.704329731794585*^9, 3.704329797189247*^9}, {3.704329893652754*^9, 
  3.70432993428675*^9}, {3.704330076209642*^9, 3.704330084932334*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"4\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"29.813142`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"95.309789`\\\"}], \\\",\\\", \\\"0\\\"}], \\\"}\\\"}]\\) does not \
exist.\"",2,17,16,23842709925883969291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.704370586003709*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.704327462560132*^9, {3.704327499561345*^9, 3.704327502169715*^9}, {
   3.7043297898736143`*^9, 3.704329799029996*^9}, 3.704329935702756*^9, 
   3.7043300943123007`*^9, 3.704370633534935*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{"mysad", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "2", ",", "9933"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"29.4", ",", "30"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "96"}], ",", 
          RowBox[{"-", "94.9"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "23"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1.0363958892595047", "*", "28.7227226"}], ",", 
         RowBox[{"1.0363958892595047", "*", 
          RowBox[{"-", "92.06967639"}]}], ",", 
         RowBox[{"12", "*", "1.23281754"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1.0363958892595047", "*", "28.68807817"}], ",", 
         RowBox[{"1.0363958892595047", "*", 
          RowBox[{"-", "92.05347243"}]}], ",", 
         RowBox[{"12", "*", "1.64492626"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1.0363958892595047", "*", "28.70537842"}], ",", 
         RowBox[{"1.0363958892595047", "*", 
          RowBox[{"-", "92.06701537"}]}], ",", 
         RowBox[{"12", "*", "0.76606043"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1.0363958892595047", "*", "28.70738704"}], ",", 
         RowBox[{"1.0363958892595047", "*", 
          RowBox[{"-", "92.06973959"}]}], ",", 
         RowBox[{"12", "*", "0.16138254"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.704320981572522*^9, 3.704320984829183*^9}, {
  3.7043210232868423`*^9, 3.704321023673326*^9}, {3.704323451014542*^9, 
  3.704323489369295*^9}, {3.704323542369625*^9, 3.704323545967828*^9}, {
  3.704323578484622*^9, 3.704323633344886*^9}, {3.7043237238960667`*^9, 
  3.704323724422105*^9}, {3.704327196780087*^9, 3.704327243716165*^9}, {
  3.704327296286418*^9, 3.704327436512101*^9}, {3.704327505718601*^9, 
  3.7043275417318363`*^9}, {3.7043298019377527`*^9, 3.704329804724416*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.3315753, 0.4561011, 0.6388182], Point3DBox[CompressedData["
1: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
X7/HL0sGrrI5JdezitOvJXchJeAOQ1yVdayTZPmvs1BoBRbcY4asb110YACa
p/i5kPQfZtLqI/DHE0KXqKB9P36uSeVycZ+qi4Dv0d3w/Rpa//LL61A4bdzT
JgdPvq6fDPL2d9K+Pij4l34Vajnz51NKkTekyIvJ2M49p7Ppjt4yOXou2pfm
56YUPULKd5mQifA5VcCHVX6vsPtn+Yso+Vds4XfpUbiEkh8a16fKT3kz4FQJ
8C+t7oz0zv8XFwiezLnvfhj4x1O6mmFoXuOXNyH88sYk8Z5tpH0CQ+rNj1Ql
FXL14r0j89WzeIYs7XipUYjslgrzNUuzgA9cn2w2Gp2v0fbfAkftcescxhBd
B50O3ulc/Splf+m1C/qpb5/eOzelc+15W+iXikM3QA9Mk43/5EKi/DBgRcFp
hijO7D7+hyxdAxISufpQE9gPM7ycdU6i/tW+S1GJ/EWwNyQH3+0u4fLpbXVy
U1vgIafnLbEp4cqfX16P+Jt9IgtA/9cnQ6c9QOPkA6mCIBHGJVL4W7AU7Ztd
V7uhvCOSIX0SOx0bjewxJWuvcaERDGG37WYgeX6uTuESYv++tfPe2wzZbXva
Oh7tO70u2nUpCtLVGWQ7bgTqX11snpZUAz8zdPpABo1L/PqFFG5CSdeANJ1n
HNh1R9vZ9qmKSL6d2R6JMdT78ck6EWEon/xcj5JPFUp+NMl7v5c75oA9+Uwh
7t4+pCds2EU1TbCT19gd/2KGyjnBtqPRmZsMUfdfPUVe1k7UyBTNO3deX4d2
OzK0mxHyl2jToLs2CuZNoWlcx69IPz8XUbiEbGEPuoGHXXc+/RHlPz/35cCr
MP8m+U969AKNw6vlXI7qBTOkZIC13HnUnmny/OkaUr/r0KELa7pCPzKLGrcx
D61HVur6vtgUyBDW7MB+IEMi16VuBn53Sd6eMDRu0NLl5zok55O8PatnxcVl
3pwefap+fq5KcvtXqiWfZEj8sFjf7kWcvNujFfl3zzKk1Du08IdsXSMmkTMm
714MfHe3y/8poX0h/+CxdfuAdz9vWT4mg6vf0Mt9fp0ErjJri1FuOvdd62/6
frsNfNcMk7Vj0jl5/nTVie2ejhNvAl/43StiNtLDP34aU/TT9kUNKPI65L/d
X6bdA7552OPFj9D6jl9eTBrOnlW9Dnx1gv4Al3Su3vnlRRT9Yko50MqHlh9t
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
o0nh+hSuS+F6pP/rL6cSgMtapE+8hb7f+sVpx2OARxyOX9UWvU9n05Q8AP6j
bfbRkSjPgnz/CHxS2rXLu5E/uZZOTHtW//u2O4KPovio/HpqLG6eGWLA6jE4
JurmgO4x5ed1wPcorKmoRusyPxeSuPPt+kYBf/vWJd4YxYnll9el6uGvly4R
xklKk4DnfLl5zTCfKw//7wqp+ptWHkNKu0mp+v1um3yLBX5hmn/KV9SP/OUU
UeY3GXXe4+dSCtcky35OtTsH+9/kqc37h6BzjJI5zPuZZxkSo9xG0RbFjf9+
r/2fN4UMWXdPKjJG78EXS8+l28B6EZnxMascjZO1Js55h8FOZq+lk1H80qFs
oAHYt1YFPpk6tYKrl9yvGOzkeezGPJNrf7F3aCunGwzp6DL9ixbat4785Fjl
784Q9nlAdgrX7/xcQk65fdK9fYohndttHxmO3jW77StoqQZc2uFXwIFkrvz8
egzIBjBjU04wRNNS4bhx8r9+V0hkzR12tHBlyK19Y2YlonfZHVck5tpDfftU
nrr6Dvmf3H28s+RNHtjtj5U+KqP7werFIarJr6C/NkZf6F7F1asLmLFsfpMx
t19+vI3yV8ZXbG7ll8GQp0WLJDg/WucPgvEzwJ5hj82i0TsUeVyRxwyZ1sNB
OxL119ybwc92wn7hpn3has6PQkI+7z9R99uTach/lcWNt0OZCsY3chhy/MXB
MX2LuHEiHdD3s/c5mMeukEWL0bmE7oVrajdgvl209/msuMZzEhWy7Ef17iqw
q3943bcfiL6LD6cG6fhdYYjhwIMlm9A+KP5PT1tf4PJ8eihfRn1xptt54Fvj
drzM+ycXUvRrUeT1SNZmoXMde/+u5FP2Fe2DPB93ODD4GUOO7hub6IXeQfBz
DcKGDZeCnZZ59nbgPXTe+yjV/Lgt2IFs+tKNyD7xMekSqFvLNPivlfz/chGF
m1C4QMDPdSnyGmQh+2AF9indu49vuSaLax9+LiNsmIjeYO9Fq/YyvJ/JlV+e
txS+0+RWi2u+NsZJEJMBs+xgymAa9k9oH5fX68uwZv4MWZ5mN7s2g2t/eZxi
aM9u4VmCUjRfKe/YpDM2lyFs+uJ01G7v9tjNTUqB72hgfocidM7JzzWaKK9J
4aoUrk/hChRuTOEmFC6kcAMKp7WPQNA0eSMKN6RwMYXr/kfytPaXNrH8tPqq
kLOeq0Z8/cSQ2bUW3+//H8YVv3yNBZvmzwm4+rHtsz82ctF/ND5p7UNrB1p/
0dqB1i80PZImjk/a9yWglkfp68mZrmDn9B6QrlaJfjequ49hLszbYCXUe6P3
qvx66JxfT1PHG42rUPSLybhJLQdFlTFk7vot6+7+83dp44RWL0FDXgRot+xA
nQsVqP3HHcvMyC1iyAeXo0+49qTlF6b1F+13tUjnHeYpzqDfqdbcBevn52pU
+ab9rgIR9FDpw553Odetbp6D5Pm5LoUb/Efy+k2UF1G4YRPrpfcftQPtd2n1
oulvavlp+mlcSuHiJtaX1m6SJtaLpp9WX9q4Ff5H7dnUcUvjTR1vGsSqQLjU
JJYh57aN/lb6/z3emtqPtHFCKyftd9X+o36nydO+96Z+X00dbzR7kmafSMgY
xYdXtyb/zYfyT3uVtg7qUfTQ7ApaeWh2Bc3eptk5tHVEhbDXcKueMMQ9qLfn
S1Se/m77b94sYQj7bPQKWk9nsAFHCxjywHzwhgr0uz97fX6qk88QUa8JxhVo
PPPbjTS7jm6/8duZtPpKiXPB47CcMIYcVw84uiuL68flHr4fRzxiyHj2ITTK
b1XmfzWTAN97/OHhSehd0v7Moe6rgbtUlX0+i84B7HZ/MF4FvHn4+8pAdC7H
L69L4TUW/FyTZHx53eHrQxg/wwabOaFzRRqXsYnlwf4JmXStu1Mm1+/hZ9t+
HO3xv/PD1ljouXV+J1ExJ5vfM7PWpnLteUUn39LsDkP0zb6ETnv5L65BTHM/
xObBvtVk/IaktFyufZycxHMysxlS7xQ68zGKw89vd9HiUdDiWBoT267R0Xms
n9h375MK6H5zvt7bGdueMsQu5/OIp9kcl7+vA3ndXftTT6N4+BdeKnkmXWNI
1JSnvufQubrExHbsuiCGeJQt1X+B8ucuctxxMvMqQ8pnTjMpzeT6vd+JTvfD
bv6950V65PliAxgS3na+j2MWV35+bkLhRmT8zL571wB/npXQ0fGf+jUIm5bW
6i5DisYnfNNF74PaiXNzRgE3cwy3X4Le6VuNMvWwBj7hz/S6F+i9Fb+8QMCv
X4sYTJqxayzwHgNLtFo3cglZzQZUAt7V2dvNCp1H8euRUH5Xn6JfSNFvQNEj
ITZexR8mXGJIxRPT1gtQ/sSBpceLBkK/HzxSnPMkk2uHeS69YsJ9mYb7tE9c
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
DMsXpQ56CfPz/vv/WuSid0n8XEw6uGzsZADjZXSO5fWTJdx38csbE5hV2+6H
cTFsV9bh1ige8rave/L3APfZpeA/BvFv/umrWXl2+1iL4nh8uPjtGBu/URYX
Dr0bLexzcN8uVv+FUv976H6ZX15I4dVmj65aHtwLvLS/7QRRIVefpybX9GfL
OThEIWEOilPNXw/GZP/25HNs3hZZXAG0b+LneuRwVmGx4i3Qc8BvBY5TMdDm
ZBx7H/d1/ACVSeid6c3aSUOkKqaNeYmbz8FUieb0VfO+P2LIgZTjmvZInrn8
MeU38OM5O3VuoXga71qvdfwB+/QjvY+P+tPcDw3It3cbguqBH7zcb7ZqNtcP
BSNvWGyGfiuLv4XsT36uLyc3lpPT9OhRuDKFa1C4DoVrU3i1mXz1Q9MjoXAR
SSk38y6C+ZZ1v5iCziV0Wl4pTAB50qNTz5NIDz/XpOgRU37XiDzTWdM2HObD
fsNbn+DyEOlSuAaF0+4p1Ci/q0nhutT6kU8e/uTSo9MYvxvqbczC3PiW6H00
RT+F08YR7Xtp/ZnW/2n9nDaOFOQsJ02PkZz6aeWn/S5Nnlb/tHan9XNaPQvl
HKe0eYPGaeWkzRu0eqaVR1XO/k+rT3n7A02Pppz9lva78nJ51xFae9Hn5/+d
dUTe9UKHdM2pHhwI/EQbZ/NL/1keNYq8hMLFFE7rt7T+SdMjlZPryilP+y49
Cqf1B0Pq/EDLIyxf/6fZITR5Wv3T5Gmcun5R5gda/6Rxefs/bd2klZPGafM5
LT81bZ6U1z6kjTva98prt9Dkad9Lm/fkXY9o5aetp/Lqp+mRt95o3yvvei2v
3Uirf5oe2nwi73ihcdo8TLO3afMnzf7RpsjT5gFNOeuTVk7a/EDTT8tfTxvv
qpTvosmbUPZT+mSYjsn0iUkMyS0/t+9iLldvo+b9+GUN/E/M3m+lqN962fR6
VP2UIWHjRy+tQueZr15p+bP5R2R+mui8TpZv6TVDXCeeGHETxQ8xOC7usRT2
77vv9Buqh+KWjG3ZyXjzDYZozTvkFYDyqk+1OWGlAfpjVp3skYXum9jnYkox
DMlcPLNiOroP/dxeJa/gEUN6337Rpx7tg1oYha4JAj7l6tiEf+i8nZ8bkpyw
Japs/qaX30s0+qG85/y/q0eR16XICwSbAyq8v8cyJH6rbe5RdC+836Y0uRXw
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
/m+0p+S8CMWL/uRPBrdl85IUf3uigPYp/NyA9P0elHsYxu9bj4OXwtD3Kgjb
G756BvYhGZIfgc6vZHHGU2DeOLs+DPPrT+2mpkC/yoDuKUVxlfNulUlbQTkf
thppV4L9hQbOvlEZ0ZT3BK0j7dhEOP8YwoYxYNC7Tn5uQlaxhhv0WzateDCq
Zxrn12NM4QbU3+XnRhSuT+EiOeVp5ZfIyTX+l8ojlVOeVj+0+qeVU4fCBRSu
KWf5BQJ+rivn99L6rbztS/tdmjytnmnfS2t3bTn7Fa3eaPVA00MbdzT9tO+l
1ZuenPVD0yNv+Wn9nKZH3n5L+10hhSvI2a9U/5fmHxqX93dp7UirZ9q4o+lX
lrOeaeWh1TO1n8s5Tmn9k9Z/5J3nafMtbX6m9Td5+7+anJw2LmjrNe27aPMJ
rV1o5af1B3nnQ1o5ae1F61c0PbRy0uqBVv+036XJyztv0+Z/WrvT6pPW/2n6
aZw2X9H00+qfVn5au8jbH2h2soQMfj5vRZd6hqhlKm7VQ/NGwMfyrZdrGeKk
f1zcA9UnPzek6NElizcqXWtfx5D33/+4c/ICEvX1c/Jc4F3YAFhIPz9XIKbb
qrJcvjFEI/xpVwVUb31r3AL6fmfIM63ZeZNRe/FzPUr59anfxX9OK6H8rg7l
ezUp8gaU3zWi1KeQUj8aFK5L+V0NCtem/K4BheuQaW/HZxlBu4y5N9a3J/JL
5OfaFC4gTlLN6auCGPLD/t4YBr2nPj1g/MtJhQypXCX8uBX5zd66vcutAvaV
c/t23r0VnWMbrH+x2RfkM68u/rcZ3Tfx6zGkcGNyuc2b3jOg3Z+Frmrx5tl/
9QdNiryYwnUpXJ/CRSSxqL714S6mjf9P4/Tzcz2i0Keo0KiaIetVnB4/Rfd9
/FxK+S4jUti7Z0BaAEOuTB4rMEH+Nr2t+kdl5TJk4I7ipcHo3s0s0GS1cyxD
DLqVnt7WfB6iSlzeDT9+/z1DfK4MqV+I+gOb9mLRC4b0X/VM9BHpGfk67dge
KI/SFMtHYejdk6/fcvvdzxlyyX295XeU33M6m8gT5jf3WYa5f/P/i0vIfX+t
3uWg/7D54vJMFK+MX78RheuQahdDnQ1QD2ET1ZUmovO68eO81/4GefO6zpo9
kX8Lv3y1maGKZ5c1mU33UOg9V6tRcx7syGqq/2Y9ypR60yUDR67aUpDBEPZ5
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
mTu9GFLxb/bYE2gd5K9PTTnbkfZdtP5AGy/yfhetPDT9tO+qNuPnyhR5oZzl
p407Gqf1H2M5f1eB2i5fbof0+xfPkLifOXcnoN+V5YmHfeWblGLt7Wi++vkd
NvCPm/IRoPLPs2MzxjIk0de+ajeq/x/+59s/Aj1mfvUftiGeEjT+AXvvIOmy
/upe1P/59eiStjWVNUGwTmmEhLy/+p+/q0ORFwj4OU1eRNFvQOyOCG5tjWUI
WDlxnqg8LXoO3zIN+JUZCwd5ovoUnnf3vQl6pp65fWkXakd+PWJybP9moRnU
24/fEottqPz83JBSnyJSskP19lj43QW+v+23/1/Uf+2x3SmJYDfOcZI82Inq
54zN31G/QM+KNe9X7EX9RxY35xnYn2OPt5ei8SXLawP7lPqM7H3mSN45ZH7q
MpDXmX2jcjAq563tSQOHg7zqhz1TOHkhRY8GhdP0gP3sbH5pDLRv32tayQpI
Dz8XEu3qKaZMHOjZ8Wf8LlQ/a9JjDTyhHp59TnligfzV6wcmLXOAfVbOgIgn
YuR3p/zpuPUS0NPxdoTXP3RuwM+NyOlxeT+6ljDENbIzWY3e37WIyXvoENeU
rwT5R6358HzWVOA3FPzyXqN4O0vDls0++IAhs9+U9rqO4krN6lOgcPQNQ9I+
9l53CMWTOdEGKqKQIQeE5yTZ6P7o9wyz9To+YP/fW7Q1EuVfy/Ce/IIB/kaw
hhxE50KPK6+N1IX9xeYPi848ReeiTx4Er3t4lGmMY5fM6Vm0oJtvQjhDRur5
j7bEeaDM4iSLExiyb4Vy31coX8nik4fPrbgO+6DYGQv+D21vHlfjFz36nxCR
SEIIOaVynI7TbHpqm4cyTyGFzGUeS5nHzHOICIWSikilSEVpolIaKU3GMvQx
u+s59e1Zr3v3fvl1X/f37/us1zr72ePae6+91n30nmvOlhsVz/n7GtWm2fko
b0tbtQlVmmB/+pRcjO+I8hw1lDt8sv4eeQPG9ZjQrNJUod7o3IK8GpbUfiTM
t1Cap39LhP5P5/qkmfUK0e8EjhR9H9r8B8pT4LXw0FZ/qJ9K6U2VeBT3yS5g
7egReRwZNUi8pATFG5z9M1Gr2zmYZ/gAUshOLgsc21c/A/aDvGMW8s/UapHT
athjjpz/0exwS7Rv6hNdk3wEuCufeAn5DfYPUK7xAn7dc/nR8eh+ma5HwtAv
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
NZnlYflb0uXlDC4SNex7LRlcyuD6DfxeVvlZeljtq8LgeuTRmV/tzwIP7BLf
983/dTlZ/2tJ+LRjq8I5og3bnoPILqr0+rzP4xSsy/xGOFHo57NCdu7Nh3Xq
cXrItlH18joMXmXNp++ZDvxKn1ZR01HeN7q8CoOrk3THijYX0zhS4r9i2UZ0
rhV2v2vbnnc50hu2JYtRPi/V2eYngmH8lqW8mv4e+V/RuT6DmzaYnxT9mngt
kCOF5d8WrqiPZ6JJfA6r7J8F9olveuiHbihv9czF2zf6gf3Pu79JkH9yzm3D
mwOBZzjfDNF4KrRX+qbWDpGwfvHu/t1R/og4g7Mj5CkcifA9ph6I/BP6XBq/
5SjYXbv25mdkofm/4OnflUag3/3ZniYT0X3EtfmwggM/cVz/8nl0r5HpASsg
2A9L7CZO00T7pn2L/Dac/T+4KUNeRvh0vXGgf+W3S22bo3204v0FcIV/8Uuh
3adH2WmJwa5waPNrWY8yoR+O2yc95QR2491Ci4nd0Xn+3xD1Lo38YT84Q2Xl
uPr7TS2i1X1Abh+wS8fvarf0O7ITlo6fv80WOG8e/kL1FqM64+Zx2F+oizuu
dEHn8+9HPRlx7wnYsRUare6hcarveSjiLNTzjCGaRy2R32b7onHfXIArtQ1f
I3BD8jBLSX1dfJ0fGoovQeeWRPlBSV5kQl0cchRHgk+XnQlcss+oSV/0v588
Vlwd9YgjZ0pDn/ZF72rp+s2Z+unyFsR4VuJkKcgPaBPn2gf5tdK/V0KcMsNq
rICrPVjRUeDGjPLrMf5XSq4E9G+fB/PYmzcH4i1QPHNWPdP/V48hr8eQl5Kn
MGxVgSc/LfnPApWfXg/6jHKyy0P/XjlDD6vdWfWjySzPmSktttj/H+W3ZP6v
Ch+4EHij4Y3ULFA56d8lIzB7fQ4E+RqvEYsEeTHje00YXJ/Zbxsmz9IvZXBW
u7DGKYsbMzhrPLL7Q8P0sOYZswbWA0s/Sw+r/Kx2YelvaHvpkM9ly6/XwLrT
acLQagniwQfHzPwO3KRvmKktKuex3VW9t57javXVryMike24h3f483PLR3dH
h6N1syjGdUUx7595TrxrNzonoXOWPNi3g/r7T+P9J7/taVzxTKhPuryEyMon
2E+G9bHb8FVzS5FdN+xYTVNHsKu//T7TwQCd++W3GaPqALzH9E/rp6M4QnQu
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
lME0mVUq1M8KPtE72A9ZTcb/p5Qm1P/bhEhdJxinivdY9euFGYkLy33okMmR
eZO3n9mH7K5LpvJPofC9R4JOud9E70MV9+JVHHnQyMtkOVqX6VxKLFYWHPsE
47Rd58/9il8I31Xa4+/RmEiO8MtzMopX/DVr8pbptzgyXeO83wl0Txpmsf99
WCBHbma0fiNG67tp0YOx2oF174bQOn5754QNbcI4Mldvw/bT9fc75uSqrXGz
gf9xpPmuwuJXyL9l1oBtO/+A/R/k8+dmGVpPr50K0zz0CeyiXcaVH1GcNEWe
dWiXi2UBr/H7652BS796Qz2kKMsOmmcK/YTOtRnclMHFJNt0u9MJ2CcanN8T
/AqdDyjOnaA/n+8Y12wtum/aPfdxCM/vn4zdNh/tI3i30Josjqj0m551BL1n
oXNt8li1skod7PPCv4+aty0X9AQ3cr/j6sOR6HyD4UJ/0yGXnfWLXC6Cfa6k
vu4rigN8IOXApKICKA9R1xlcKJQzzXed5CUfJ5m3I9C5X/Rl7941wL/8OPot
H737nvJZ+/BH4J17F+g1zRP0s+Tp+uWk9OaA1h+AXzFP6T8GvXdedu7NoTNQ
Dy+/yAoPorjBJXt0Uh8CH+To9nMV8gdel/3i0Cbo54M5jyZ/kD+8QZtXjk1C
OPIhbejgBPSuU/xgkqkz7Ke+7X1xZHKpUG+6EQtmXgT57EL/a+nIT8/XoWrR
GD+O9O2ZvMEbxfOJ0nUK++5fZ2/gPBQudhOngT3vlXcv3wDFuSLOG39dTuHI
wSUdlwvjS4tMP1/QPT4fvivswR7hPYsO+bThzJ93aWBnPqx2b4r87uZd8bz6
Bbjx8Y2xL1D7rvsqMekH8zMf5u8HinNS9VstNwDWC4Xdh9ZZj+B9agUgv+75
0sh0tI4vT+nyuzfIT+YPclHeIjqXMbgO+Sq/1a/vE47w6V6s67kKaTu8627p
AZC/sMXO4rFQb4r8YlCfTdaauyah84QFvXp/5/2vlg3vY7Qe5Zdxi9VobQjz
SUhc4yQ/lM/93IcB1d7XOTLiYiODPHR+MmNghkYvsHvX/uqg0gjZOZFnPUoH
PoP5qtHG/Xro/HmyTb+kB+Ec2ffFd23MK6G/9Ry46cJwGNcHlHcMPIXuuea3
nWX3h9/X82EF0T3IiJetrf/C/O/RNPPMeLTfp8urM7geg5vUxl+AcWR9taZy
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
IxHWDwrljYL9fwDMAsjD
     "]]}, 
   {RGBColor[1, 0, 0], PointSize[Large], 
    Point3DBox[{{29.76811163098107, -95.42063413604888, 
     14.793810480000001`}, {29.732206286143334`, -95.40384041851514, 
     19.73911512}, {29.750136194126494`, -95.41787626585963, 9.19272516}, {
     29.75221791963758, -95.42069963626906, 1.93659048}}]}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  FaceGridsStyle->Automatic,
  PlotRange->{{29.4, 30}, {-96, -94.9}, {0, 23}},
  PlotRangePadding->{{Automatic, Automatic}, {Automatic, Automatic}, {
    Automatic, Automatic}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7043209859933863`*^9, 3.704321024909522*^9, 3.704321302186756*^9, {
   3.7043234804501762`*^9, 3.7043234901434507`*^9}, 3.7043235493787107`*^9, {
   3.704323591627955*^9, 3.704323634055056*^9}, 3.704323725502982*^9, {
   3.7043272075203533`*^9, 3.704327246706538*^9}, 3.7043273639609632`*^9, 
   3.704327437722723*^9, {3.704327531344056*^9, 3.7043275426231613`*^9}, 
   3.704329805814794*^9, 3.704370641212902*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat3d", "=", 
  RowBox[{"mysad", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "2", ",", "9933"}], "}"}]}], "]"}], ",", "All"}], 
    "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.704327257402532*^9, 3.7043272576926622`*^9}, {
  3.704327818015317*^9, 3.704327824193272*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"29.813142`", ",", 
             RowBox[{"-", "95.309789`"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.483751`", ",", 
             RowBox[{"-", "94.924777`"}], ",", "15"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.791029`", ",", 
             RowBox[{"-", "95.450656`"}], ",", "18"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.791029`", ",", 
             RowBox[{"-", "95.450656`"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.791029`", ",", 
             RowBox[{"-", "95.450656`"}], ",", "18"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.800958`", ",", 
             RowBox[{"-", "95.405491`"}], ",", "19"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.800841`", ",", 
             RowBox[{"-", "95.415812`"}], ",", "7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.677357`", ",", 
             RowBox[{"-", "95.353895`"}], ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.677357`", ",", 
             RowBox[{"-", "95.353895`"}], ",", "21"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.677357`", ",", 
             RowBox[{"-", "95.353895`"}], ",", "9"}], "}"}], ",", 
           TemplateBox[{"9912"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{"29.742197`", ",", 
             RowBox[{"-", "95.470583`"}], ",", "16"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.742197`", ",", 
             RowBox[{"-", "95.470583`"}], ",", "17"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.693625`", ",", 
             RowBox[{"-", "95.364404`"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.732635`", ",", 
             RowBox[{"-", "95.396305`"}], ",", "18"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.743508`", ",", 
             RowBox[{"-", "95.395794`"}], ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.558859`", ",", 
             RowBox[{"-", "95.14541`"}], ",", "10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.68351`", ",", 
             RowBox[{"-", "95.583291`"}], ",", "19"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.621642`", ",", 
             RowBox[{"-", "95.501045`"}], ",", "17"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.625397`", ",", 
             RowBox[{"-", "95.501091`"}], ",", "8"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.614463`", ",", 
             RowBox[{"-", "95.424911`"}], ",", "17"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 19, 23842709925883969291, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 19, 23842709925883969291, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 19, 23842709925883969291, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[19]]], "Output",
 CellChangeTimes->{3.704327825847027*^9, 3.704330135433764*^9, 
  3.704370647150022*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Append"}]], "Input",
 CellChangeTimes->{{3.704327913401828*^9, 3.704327914520825*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Append\\\", \\\"[\\\", RowBox[{StyleBox[\
\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"elem\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\\) gives \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) with \
\\!\\(\\*StyleBox[\\\"elem\\\", \\\"TI\\\"]\\) appended. \\n\\!\\(\\*RowBox[{\
\\\"Append\\\", \\\"[\\\", StyleBox[\\\"elem\\\", \\\"TI\\\"], \\\"]\\\"}]\\) \
represents an operator form of Append that can be applied to an expression.\"\
\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Append"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.704327915037614*^9},
 CellTags->"Info523704309914-1690215"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", "24"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["plotlist", "i"], "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "<", 
       RowBox[{
        RowBox[{"Length", "[", "mat3d", "]"}], "+", "1"}]}], ",", 
      RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", "==", 
         RowBox[{"mat3d", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "3"}], "]"}], "]"}]}], ",", 
        RowBox[{
         SubscriptBox["plotlist", "i"], "=", 
         RowBox[{"Append", "[", 
          RowBox[{
           SubscriptBox["plotlist", "i"], ",", 
           RowBox[{"mat3d", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",\

 CellChangeTimes->{{3.7043277959976187`*^9, 3.704327965566704*^9}, {
  3.7043280018012133`*^9, 3.7043280315953913`*^9}, {3.704328212372355*^9, 
  3.70432821437288*^9}, {3.7043283255283813`*^9, 3.704328336360353*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", "#", "}"}], "&"}], "/@", 
      RowBox[{
       SubscriptBox["plotlist", "i"], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{
       SubscriptBox["plotlist", "i"], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "4"}], "]"}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"29.4", ",", "30"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "96"}], ",", 
          RowBox[{"-", "94.9"}]}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "23", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704327630284665*^9, 3.704327696775792*^9}, {
  3.704327767677239*^9, 3.70432777389181*^9}, {3.704328048759954*^9, 
  3.704328099118277*^9}, {3.7043281781548233`*^9, 3.704328178404194*^9}, {
  3.7043283420179453`*^9, 3.704328342609967*^9}, {3.7043301717461987`*^9, 
  3.7043301935414667`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 7, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 23, 1}}, Typeset`size$$ = {
    740., {220., 224.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$46107$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$46107$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        Map[{#}& , 
         Part[
          Subscript[$CellContext`plotlist, $CellContext`i$$], All, {1, 2}]], 
        PlotStyle -> Part[
          Subscript[$CellContext`plotlist, $CellContext`i$$], All, 4], 
        PlotRange -> {{29.4, 30}, {-96, -94.9}}], 
      "Specifications" :> {{$CellContext`i$$, 1, 23, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{785., {265., 271.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.704328179090163*^9, 3.704328219206636*^9, {3.704328338045167*^9, 
   3.704328343242152*^9}, 3.7043301971191*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Manipulate"}]], "Input",
 CellChangeTimes->{{3.7043281708862743`*^9, 3.704328173879167*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\) generates \
a version of \!\(\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\) with controls added \
to allow interactive manipulation of the value of \!\(\*StyleBox[\\\"u\\\", \
\\\"TI\\\"]\). \\n\!\(\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"du\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\) allows the value of \
\!\(\*StyleBox[\\\"u\\\", \\\"TI\\\"]\) to vary between \
\!\(\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\) and \!\(\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\) in steps \!\(\*StyleBox[\\\"du\\\", \
\\\"TI\\\"]\). \\n\!\(\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"init\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\) takes the initial value of \
\!\(\*StyleBox[\\\"u\\\", \\\"TI\\\"]\) to be \
\!\(\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"init\\\", \\\
\"TI\\\"]]\). \\n\!\(\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"init\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\
\", \\\"TI\\\"], StyleBox[\\\"lbl\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \
\\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \
\\\"]\\\"}]\) labels the controls for \!\(\*StyleBox[\\\"u\\\", \\\"TI\\\"]\) \
with \!\(\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"lbl\\\", \\\"TI\\\"]]\). \\n\!\(\*RowBox[{\\\"Manipulate\\\", \\\
\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\
\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\) allows \
\!\(\*StyleBox[\\\"u\\\", \\\"TI\\\"]\) to take on discrete values \
\!\(\*RowBox[{SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}]\). \\n\!\(\*RowBox[{\\\"Manipulate\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\) provides controls to manipulate \
each of the \!\(\*RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}]\). \\n\!\(\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], StyleBox[\\\"u\\\", \
\\\"TI\\\"]], \\\"\[Rule]\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"c\\\", \
\\\"TI\\\"], StyleBox[\\\"v\\\", \\\"TI\\\"]], \\\"\[Rule]\\\", RowBox[{\\\"{\
\\\", RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\) links the controls to the \
specified controllers on an external device.\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Manipulate"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.704328174450822*^9},
 CellTags->"Info603704310174-1690215"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.704323494890512*^9, 3.704323498143694*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ListPlot\\\", \\\"[\\\", RowBox[{\\\"{\\\
\", RowBox[{SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots points \
\\!\\(\\*RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \
\\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}]\\). \\n\\!\\(\\*RowBox[{\\\"ListPlot\\\", \\\"[\\\", RowBox[{\\\
\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots a list of \
points with specified \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\) coordinates. \\n\\!\\(\\*RowBox[{\
\\\"ListPlot\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots data from all the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"ListPlot\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\
\", RowBox[{StyleBox[\\\"w\\\", \\\"TI\\\"], \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\
\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\
\"]\\\"}]\\) plots \\!\\(\\*SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) with features defined by the symbolic \
wrapper \\!\\(\\*StyleBox[\\\"w\\\", \\\"TI\\\"]\\). \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ListPlot"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.7043234987512417`*^9},
 CellTags->"Info243704305498-1690215"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Min", "[", 
  RowBox[{"mat", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "[", 
  RowBox[{"mat", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7043213083383207`*^9, 3.704321335367687*^9}}],

Cell[BoxData["29.483751`"], "Output",
 CellChangeTimes->{3.704321445484026*^9}],

Cell[BoxData["33.1589`"], "Output",
 CellChangeTimes->{3.7043214454895906`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Min", "[", 
  RowBox[{"mat", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "[", 
  RowBox[{"mat", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.704321363789075*^9, 3.7043213737557898`*^9}}],

Cell[BoxData[
 RowBox[{"-", "95.824284`"}]], "Output",
 CellChangeTimes->{{3.704321365162496*^9, 3.704321374071302*^9}}],

Cell[BoxData[
 RowBox[{"-", "94.924777`"}]], "Output",
 CellChangeTimes->{{3.704321365162496*^9, 3.7043213740766068`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.23281754", ",", "28.7227226", ",", 
      RowBox[{"-", "92.06967639"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.64492626", ",", "28.68807817", ",", 
      RowBox[{"-", "92.05347243"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.76606043", ",", "28.70537842", ",", 
      RowBox[{"-", "92.06701537"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.16138254", ",", "28.70738704", ",", 
      RowBox[{"-", "92.06973959"}]}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.704323354422606*^9, 3.704323435326277*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.3315753, 0.4561011, 0.6388182], 
   Point3DBox[{{1.23281754, 28.7227226, -92.06967639}, {1.64492626, 
    28.68807817, -92.05347243}, {0.76606043, 28.70537842, -92.06701537}, {
    0.16138254, 28.70738704, -92.06973959}}]},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  FaceGridsStyle->Automatic,
  ImageSize->{323.7515627999623, 185.5990753067186},
  PlotRange->{{0.16138254, 1.64492626}, {28.68807817, 28.7227226}, Automatic},
  
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.39428918615579633`, -3.3542415932554968`, 
   0.20880462579987613`},
  ViewVertical->{-0.09281034120451216, -0.278180841772166, 
   2.3900858507546743`}]], "Output",
 CellChangeTimes->{{3.7043234115828733`*^9, 3.704323435959825*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.704321084749632*^9, 3.704321098817142*^9}}]
},
WindowSize->{1340, 683},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info103704352584-2205563"->{
  Cell[16146, 436, 1406, 25, 101, "Print",
   CellTags->"Info103704352584-2205563"]},
 "Info163704352585-2205563"->{
  Cell[62411, 1612, 430, 11, 43, "Print",
   CellTags->"Info163704352585-2205563"]},
 "Info523704309914-1690215"->{
  Cell[198973, 4021, 765, 15, 63, "Print",
   CellTags->"Info523704309914-1690215"]},
 "Info603704310174-1690215"->{
  Cell[204362, 4162, 5266, 79, 158, "Print",
   CellTags->"Info603704310174-1690215"]},
 "Info243704305498-1690215"->{
  Cell[209785, 4250, 2918, 45, 101, "Print",
   CellTags->"Info243704305498-1690215"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info103704352584-2205563", 215925, 4400},
 {"Info163704352585-2205563", 216042, 4403},
 {"Info523704309914-1690215", 216158, 4406},
 {"Info603704310174-1690215", 216275, 4409},
 {"Info243704305498-1690215", 216394, 4412}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 287, 7, 32, "Input"],
Cell[870, 31, 10518, 263, 161, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11425, 299, 268, 6, 32, "Input"],
Cell[11696, 307, 288, 6, 24, "Message"],
Cell[11987, 315, 246, 5, 24, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12270, 325, 331, 7, 32, "Input"],
Cell[12604, 334, 373, 8, 24, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13014, 347, 186, 3, 32, "Input"],
Cell[13203, 352, 188, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13428, 360, 394, 11, 32, "Input"],
Cell[13825, 373, 488, 9, 24, "Message"],
Cell[14316, 384, 548, 10, 24, "Message"],
Cell[14867, 396, 351, 9, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15255, 410, 272, 6, 32, "Input"],
Cell[15530, 418, 458, 9, 24, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16025, 432, 118, 2, 32, "Input"],
Cell[16146, 436, 1406, 25, 101, "Print",
 CellTags->"Info103704352584-2205563"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17589, 466, 7327, 188, 348, "Input"],
Cell[24919, 656, 487, 9, 24, "Message"],
Cell[25409, 667, 487, 9, 24, "Message"],
Cell[25899, 678, 487, 9, 24, "Message"],
Cell[26389, 689, 338, 7, 24, "Message"],
Cell[26730, 698, 499, 10, 24, "Message"],
Cell[27232, 710, 497, 10, 24, "Message"],
Cell[27732, 722, 497, 10, 24, "Message"],
Cell[28232, 734, 340, 7, 24, "Message"]
}, Open  ]],
Cell[28587, 744, 195, 3, 117, "Input"],
Cell[CellGroupData[{
Cell[28807, 751, 432, 12, 32, "Input"],
Cell[29242, 765, 10504, 267, 161, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39783, 1037, 99, 1, 32, "Input"],
Cell[39885, 1040, 10447, 261, 161, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50369, 1306, 305, 9, 32, "Input"],
Cell[50677, 1317, 388, 8, 24, "Message"],
Cell[51068, 1327, 11185, 276, 161, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62290, 1608, 118, 2, 32, "Input"],
Cell[62411, 1612, 430, 11, 43, "Print",
 CellTags->"Info163704352585-2205563"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62878, 1628, 1268, 37, 54, "Input"],
Cell[64149, 1667, 386, 8, 24, "Message"],
Cell[64538, 1677, 250, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64825, 1686, 2574, 64, 117, "Input"],
Cell[67402, 1752, 120569, 1981, 303, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188008, 3738, 390, 11, 32, "Input"],
Cell[188401, 3751, 10417, 261, 161, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198855, 4017, 115, 2, 32, "Input"],
Cell[198973, 4021, 765, 15, 63, "Print",
 CellTags->"Info523704309914-1690215"]
}, Open  ]],
Cell[199753, 4039, 1277, 34, 138, "Input"],
Cell[CellGroupData[{
Cell[201055, 4077, 1243, 34, 34, "Input"],
Cell[202301, 4113, 1900, 40, 553, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204238, 4158, 121, 2, 32, "Input"],
Cell[204362, 4162, 5266, 79, 158, "Print",
 CellTags->"Info603704310174-1690215"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209665, 4246, 117, 2, 32, "Input"],
Cell[209785, 4250, 2918, 45, 101, "Print",
 CellTags->"Info243704305498-1690215"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212740, 4300, 345, 9, 54, "Input"],
Cell[213088, 4311, 79, 1, 32, "Output"],
Cell[213170, 4314, 79, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213286, 4320, 345, 9, 54, "Input"],
Cell[213634, 4331, 120, 2, 32, "Output"],
Cell[213757, 4335, 122, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213916, 4342, 648, 16, 54, "Input"],
Cell[214567, 4360, 928, 23, 201, "Output"]
}, Open  ]],
Cell[215510, 4386, 92, 1, 32, "Input"]
}
]
*)

